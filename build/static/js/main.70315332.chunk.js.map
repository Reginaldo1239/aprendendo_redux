{"version":3,"sources":["componentes/header/style.module.css","componentes/button/style.module.css","logo.svg","componentes/header/index.js","global/validation.js","componentes/button/index.js","reducers/list_produtos.js","app/store.js","containers/screen-home/form-novo-produto/index.js","actions/list-produtos.js","containers/screen-home/list-produtos/index.js","screens/home/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","Style","header","h2","Validation","event","RegExp","test","key","preventDefault","value","console","log","v","replace","toFixed","Button","props","type","onClick","button","children","listProdutos","state","produtos","action","produto_name","quantidade","price","id","slice","store","createStore","connect","useState","setPrice","produto","setProduto","setQuantidade","setId","handelerValues","name","target","formatValueMoney","onChange","e","onKeyPress","preventString","objetoProduto","dispatch","setProdutos","subscribe","getState","p","map","lista","i","Home","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70315332.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__13hc-\",\"h2\":\"style_h2__14Xi5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__3OLKR\"};","module.exports = __webpack_public_path__ + \"static/media/logo.8dad8028.svg\";","import React from 'react';\r\nimport Style from './style.module.css';\r\n\r\nexport default function Header(){\r\n    return (\r\n        <header className={Style.header}>\r\n            <h2 className={Style.h2}>Lista de compras</h2>\r\n            </header>\r\n    )\r\n} ","export default class Validation{\r\n\r\n    static preventString(event){       \r\n        let reg  = new RegExp(/[0-9]{1}/,'g');\r\n        if(!reg.test(event.key)){\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n\r\nstatic formatValueMoney(value){\r\n    console.log(value)\r\n    value+='';\r\n    console.log('value')\r\n    let v = value.replace(/\\D/g,''); \r\n\tv = (v/100).toFixed(2) + '';\r\n\tv = v.replace(\".\", \",\");\r\n\tv = v.replace(/(\\d)(\\d{3})(\\d{3}),/g, \"$1.$2.$3,\");\r\n\tv = v.replace(/(\\d)(\\d{3}),/g, \"$1.$2,\");\r\n\tvalue = v;\r\n   return value;\r\n\r\n} \r\n}","import React from 'react';\r\nimport Style from './style.module.css';\r\n\r\nexport default function Button(props){\r\n    return <button  type='button' onClick={()=>props.onClick()} className={Style.button }>{props.children}</button>\r\n}    ","\r\n\r\nfunction listProdutos(state = {produtos:[]},action){\r\n   // console.log(action)\r\n   switch(action.type){\r\n        case 'ADD_PRODUTO' :\r\nreturn{\r\n    ...state,\r\n    produtos:[\r\n        ...state.produtos,{ \r\n    produto_name : action.produto_name,\r\n    quantidade:action.quantidade,\r\n    price:action.price *action.quantidade,\r\n    id:action.id }]\r\n\r\n   }\r\n        break;\r\n      case 'DELETE_PRODUTO':\r\n          return{\r\n              ...state,\r\n              produtos:[\r\n                  ...state.produtos.slice(0,action.id ), ...state.produtos.slice(action.id+1)\r\n                      \r\n                  \r\n              ]\r\n          }\r\n}}\r\n\r\nexport default listProdutos; ","import { createStore } from 'redux';\r\nimport listProdutos from '../reducers/list_produtos'\r\n\r\n\r\nconst store = createStore(listProdutos);\r\nexport default store;  ","import React,{useState} from 'react';\r\nimport Validation from '../../../global/validation';\r\nimport Button from '../../../componentes/button';\r\nimport {addProduto} from '../../../actions/list-produtos';\r\nimport {connect} from 'react-redux';\r\nimport store from '../../../app/store';\r\nimport './style.css'\r\nfunction FormNovoProduto(props){ \r\n\r\n    const [price,setPrice] = useState('');\r\n    const [produto,setProduto] =useState('');\r\n    const [quantidade,setQuantidade] = useState('');\r\n    const [id,setId]= useState(0);\r\n    const handelerValues=(event)=>{\r\n        let name  = event.target.name;\r\n        let value = event.target.value;\r\n        switch(name){\r\n            case'price':\r\n              setPrice(Validation.formatValueMoney(value));\r\n              break;\r\n            case 'produto':\r\n                setProduto(value);\r\n                break;\r\n              case 'quantidade':\r\n                  setQuantidade(value)\r\n                  break;     \r\n        }\r\n    }\r\n\r\n    return(\r\n        <form className=\"flex novo_produto\">\r\n        <div className=\"form_group\">\r\n                <div className=\"form_single\"> \r\n                        <label>Produto</label> \r\n                    </div>\r\n                    <div className=\"form_single\">\r\n                        <input\r\n                            type='text'\r\n                            name='produto'\r\n                            onChange={(e)=>handelerValues(e)}\r\n                        />\r\n                    </div>\r\n            </div>\r\n            <div className=\"form_group\">\r\n            <div className=\"form_single\">\r\n                    <label>quantidade</label>\r\n                    </div>\r\n                 <div className=\"form_single\">\r\n                        <input\r\n                            type='text'\r\n                            name='quantidade'\r\n                            onKeyPress={(event)=>{Validation.preventString(event)}}\r\n                            onChange={(e)=>handelerValues(e)}\r\n                            />\r\n                    </div>   \r\n              </div>\r\n            <div className=\"form_group\">\r\n                <div className=\"form_single\">\r\n                    <label>Pre√ßo</label>\r\n                    </div>\r\n                    <div className=\"form_single\">\r\n                        <input\r\n                            type='text'\r\n                            name='price'\r\n                            value={price}\r\n\r\n                     \r\n                            onChange={(e)=>handelerValues(e)}\r\n                        />    \r\n                    </div>\r\n            </div>\r\n            <div className=\"form_group\">\r\n                 <div className=\"form_single\">\r\n                      <Button onClick ={()=>{ props.dispatch(addProduto({name:produto,quantidade:quantidade,price:price.replace(/[.,]/,''),id:id}));setId(id+1) ;console.log(price.replace(/[,]/,'.'))}}>+</Button>\r\n                    </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default connect()(FormNovoProduto); ","\r\n\r\nexport  function addProduto(objetoProduto) {\r\n    return {\r\n        type:\"ADD_PRODUTO\",\r\n        produto_name:objetoProduto.name,\r\n        quantidade:objetoProduto.quantidade,\r\n        price:objetoProduto.price,\r\n        id:objetoProduto.id\r\n    }\r\n  }\r\n  export function deleteProduto(id){\r\n      return {\r\n          type:'DELETE_PRODUTO',\r\n          id:id\r\n      } \r\n    }","import React, { useState, useEffect } from 'react';\r\nimport './style.css' \r\nimport store from '../../../app/store';\r\nimport {deleteProduto} from '../../../actions/list-produtos';\r\nimport Validation from '../../../global/validation'\r\nimport {connect} from 'react-redux';\r\nfunction ListProdutos(props){\r\n    const [produtos,setProdutos] = useState([]);\r\n//store.subscribe((e) =>console.log(setProdutos(store.getState())))\r\n  //store.subscribe(()=>{console.log(setProdutos(store.getState()));})\r\nstore.subscribe(()=>{ setProdutos(store.getState().produtos);console.log(produtos)});\r\nstore.subscribe(()=>{ console.log(store.getState())});\r\n    return ( \r\n        <div className=\"list_produtos\" onClick={()=>console.log(props.p)}>\r\n        <div className=\"line_of_table flex \">\r\n            <div className=\"box\">\r\n                    <span>Produtos</span>\r\n                </div> \r\n             <div className=\"box\">\r\n                    <span>quantidade</span>\r\n                 </div>\r\n                 <div className=\"box\">\r\n                     <span>total</span>\r\n                     </div>  \r\n                     <div className=\"box\">\r\n                    \r\n                            </div>    \r\n                </div>     \r\n                    {produtos.map((lista,i)=>   \r\n                    <div key={lista,i} className=\"line_of_table flex\">\r\n                  \r\n                     <div className=\"box\">\r\n                    <span>{lista.produto_name} </span>\r\n                </div>\r\n                   <div className=\"box\">\r\n                         <span>{lista.quantidade}</span>\r\n                     </div>\r\n                        <div className=\"box\">\r\n                        <span>{ Validation.formatValueMoney(lista.price)}</span>\r\n                            </div>  \r\n                            <div className=\"box\"onClick={()=>props.dispatch(deleteProduto(i))}>\r\n                          <span>X</span>\r\n                            </div>    \r\n                     \r\n \r\n                    </div>\r\n                     )\r\n}\r\n                     \r\n            </div>\r\n            \r\n    )\r\n}\r\nexport default connect()(ListProdutos)","import React,{useState} from 'react';\r\nimport style from './style.css' \r\nimport Header from '../../componentes/header';\r\nimport Validation  from '../../global/validation';\r\nimport FormNovoProduto from '../../containers/screen-home/form-novo-produto';\r\nimport ListProdutos from '../../containers/screen-home/list-produtos';\r\nimport {connect} from 'react-redux' \r\nexport default function Home(){\r\n    const [price,setPrice] = useState('');\r\n    const handelerValues=(event)=>{\r\n        let name  = event.target.name;\r\n        let value = event.target.value;\r\n        switch(name){\r\n            case'price':\r\n              setPrice(Validation.formatValueMoney(value));\r\n        }\r\n    }\r\n\r\n\r\nreturn(\r\n<div className='flex center home' >\r\n        <Header></Header>\r\n<section className=\"novo_produto\">\r\n        <FormNovoProduto></FormNovoProduto>\r\n        <ListProdutos></ListProdutos>\r\n            </section>     \r\n</div>\r\n    ) \r\n}  ","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport Home from './screens/home';\r\nimport {Provider} from 'react-redux';\r\nimport store from './app/store';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <div className=\"App\">\r\n      <Home></Home>\r\n    </div>\r\n    </Provider>\r\n  ); \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}